// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// common practice to represent empty messages
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// message structure used for requests to SayHello method
type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// message structure used for the SayHello method response
type Reply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{2}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterType((*Reply)(nil), "proto.Reply")
}

func init() {
	proto.RegisterFile("users.proto", fileDescriptor_030765f334c86cea)
}

var fileDescriptor_030765f334c86cea = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x2d, 0x4e, 0x2d,
	0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xec, 0x5c, 0xac, 0xae,
	0xb9, 0x05, 0x25, 0x95, 0x4a, 0xb2, 0x5c, 0xec, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42,
	0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6,
	0x92, 0x22, 0x17, 0x6b, 0x50, 0x6a, 0x41, 0x4e, 0xa5, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71,
	0x71, 0x62, 0x3a, 0x4c, 0x1e, 0xc6, 0x35, 0xca, 0xe5, 0x12, 0x70, 0x2f, 0x2a, 0x48, 0xf6, 0xcd,
	0x4c, 0x2e, 0xca, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xd2, 0xe0, 0x62, 0xf3, 0x4d,
	0x2d, 0xc9, 0xc8, 0x4f, 0x11, 0xe2, 0x83, 0xd8, 0xab, 0x07, 0xb5, 0x44, 0x8a, 0x07, 0xce, 0x2f,
	0xc8, 0xa9, 0x54, 0x62, 0x10, 0xd2, 0xe7, 0xe2, 0xf7, 0xcb, 0x87, 0x4a, 0x42, 0xb5, 0xc0, 0x94,
	0x80, 0x1d, 0x88, 0xae, 0x21, 0x89, 0x0d, 0xcc, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4e,
	0xd3, 0xe2, 0x18, 0xd6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrpcMicroserviceClient is the client API for GrpcMicroservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcMicroserviceClient interface {
	// service methods
	Method(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
	NoRequestMethod(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Reply, error)
}

type grpcMicroserviceClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcMicroserviceClient(cc grpc.ClientConnInterface) GrpcMicroserviceClient {
	return &grpcMicroserviceClient{cc}
}

func (c *grpcMicroserviceClient) Method(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.GrpcMicroservice/Method", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcMicroserviceClient) NoRequestMethod(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.GrpcMicroservice/NoRequestMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcMicroserviceServer is the server API for GrpcMicroservice service.
type GrpcMicroserviceServer interface {
	// service methods
	Method(context.Context, *Request) (*Reply, error)
	NoRequestMethod(context.Context, *Empty) (*Reply, error)
}

// UnimplementedGrpcMicroserviceServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcMicroserviceServer struct {
}

func (*UnimplementedGrpcMicroserviceServer) Method(ctx context.Context, req *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Method not implemented")
}
func (*UnimplementedGrpcMicroserviceServer) NoRequestMethod(ctx context.Context, req *Empty) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoRequestMethod not implemented")
}

func RegisterGrpcMicroserviceServer(s *grpc.Server, srv GrpcMicroserviceServer) {
	s.RegisterService(&_GrpcMicroservice_serviceDesc, srv)
}

func _GrpcMicroservice_Method_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcMicroserviceServer).Method(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GrpcMicroservice/Method",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcMicroserviceServer).Method(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcMicroservice_NoRequestMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcMicroserviceServer).NoRequestMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GrpcMicroservice/NoRequestMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcMicroserviceServer).NoRequestMethod(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcMicroservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.GrpcMicroservice",
	HandlerType: (*GrpcMicroserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Method",
			Handler:    _GrpcMicroservice_Method_Handler,
		},
		{
			MethodName: "NoRequestMethod",
			Handler:    _GrpcMicroservice_NoRequestMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}
